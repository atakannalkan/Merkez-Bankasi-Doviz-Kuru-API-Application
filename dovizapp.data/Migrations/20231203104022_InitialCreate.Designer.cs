// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dovizapp.data.Concrete.EfCore.Contexts;

#nullable disable

namespace dovizapp.data.Migrations
{
    [DbContext(typeof(DovizContext))]
    [Migration("20231203104022_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dovizapp.entity.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<double?>("BanknoteBuying")
                        .HasColumnType("float");

                    b.Property<double?>("BanknoteSelling")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double?>("ForexBuying")
                        .HasColumnType("float");

                    b.Property<double?>("ForexSelling")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyId");

                    b.HasIndex("CurrencyCode")
                        .IsUnique()
                        .HasFilter("[CurrencyCode] IS NOT NULL");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("dovizapp.entity.CurrencyLog", b =>
                {
                    b.Property<int>("CurrencyLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyLogId"));

                    b.Property<double?>("BanknoteBuying")
                        .HasColumnType("float");

                    b.Property<double?>("BanknoteSelling")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double?>("ForexBuying")
                        .HasColumnType("float");

                    b.Property<double?>("ForexSelling")
                        .HasColumnType("float");

                    b.Property<DateTime>("LogAddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyLogId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyLogs");
                });

            modelBuilder.Entity("dovizapp.entity.CurrencyLog", b =>
                {
                    b.HasOne("dovizapp.entity.Currency", "Currency")
                        .WithMany("CurrencyLogs")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("dovizapp.entity.Currency", b =>
                {
                    b.Navigation("CurrencyLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
